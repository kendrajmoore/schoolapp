function __monad(m, value) {
    while (true) {
        var bind = m.send(value);

        if (bind.done)
            return bind.value;

        value = bind.value;

        if (value && typeof value.then === "function") {
            return value.then(function(nv) {
                return __monad(m, nv);
            });
        }
    }
}

function __Iterator(v) {
    this.iterator = v.iterator();
}

__Iterator.prototype.hasNext = function() {
    var n = this.iterator.next();

    if (n.done)
        return false;

    this._next = n.value;
    return true;
};

__Iterator.prototype.next = function() {
    return this._next;
};

function __ArrayIterator(v) {
    this.array = v;
    this.index = 0;
}

__ArrayIterator.prototype.hasNext = function() {
    return this.index < this.array.length;
};

__ArrayIterator.prototype.next = function() {
    return this.array[this.index++];
};

function __ObjectIterator(v) {
    this.obj = v;
    this.keysIterator = new __ArrayIterator(Object.keys(v));
}

__ObjectIterator.prototype.hasNext = function() {
    return this.keysIterator.hasNext();
};

__ObjectIterator.prototype.next = function() {
    var k = this.keysIterator.next();
    return [k, this.obj[k]];
};

function __iterator(v) {
    if (typeof v.iterator === "function") {
        return new __Iterator(v);
    }

    if (typeof v === "string" || Object.prototype.toString.call(v) === "[object Array]") {
        return new __ArrayIterator(v);
    }

    return new __ObjectIterator(v);
}

function __IteratorValue(value, done) {
    this.done = done;
    this.value = value;
}

__IteratorValue.done = new __IteratorValue(void 0, true);

function __Generator(me, fn) {
    this.me = me;
    this.fn = fn;
    this.born = false;
    this.closed = false;
}

function __generatorYield(me, v, next) {
    me.fn = next;
    return new __IteratorValue(v, false);
}

function __generatorStop(me, v) {
    me.closed = true;
    return (v === void 0 ? __IteratorValue.done : new __IteratorValue(v, true));
}

__Generator.prototype = {
    iterator: function() {
        return this;
    },

    next: function() {
        return this.send();
    },

    send: function(v) {
        if (this.closed)
            throw new Error("generator is closed!");

        if (!this.born) {
            this.born = true;
            return this.fn.call(this.me, this);
        }

        if (!this.fn) {
            me.closed = true;
            return __IteratorValue.done;
        }

        return this.fn.call(this.me, null, v);
    },

    "throw": function(e) {
        if (this.closed)
            throw new Error("generator is closed!");

        if (!this.born) {
            throw e;
        }

        return this.fn.call(this.me, e);
    }
};

function __gen(me, fn) {
    return new __Generator(me, fn);
}

function __convertForIn(obj) {
    return function() {
        var __comp = [];

        Object.keys(obj).forEach(function(k) {
            __comp.push(k);
        });

        return __comp;
    }.call(this);
}

var should = require("should");
var Q = require("q");

describe('Monad Expression', function() {

	function async(x) {
        var d = Q.defer();
        setTimeout(function() {
            return d.resolve(x);
        }, 1);
        return d.promise;
    }

	it('flattens async control flow', function(done) {
		function async(x) {
            var d = Q.defer();
            setTimeout(function() {
                return d.resolve(x);
            }, 10);
            return d.promise;
        }
		__monad(function() {
            return new __Generator(this, function(__generator) {
                return __generatorYield(__generator, async('Meee'), function(e, __t4) {
                    var x =__t4;
                    x.should.equal('Meee');
                    done();
                    return __generatorStop(__generator);
                });
            });
        }.call(this));
	})

	it('allows multiple binds', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                return __generatorYield(__generator, async('Meee'), function(e, __t5) {
                    var x =__t5;
                    x.should.equal('Meee');

                    return __generatorYield(__generator, async('You'), function(e, __t6) {
                        var y =__t6;
                        y.should.equal('You');
                        done();
                        return __generatorStop(__generator);
                    });
                });
            });
        }.call(this)).done();
	})

	it('allows chain of binds in a single variable declaration', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                return __generatorYield(__generator, async('Hellooo'), function(e, __t7) {
                    var x = __t7;

                    return __generatorYield(__generator, async(x), function(e, __t8) {
                        var y = __t8;
                        y.should.equal('Hellooo');
                        done();
                        return __generatorStop(__generator);
                    });
                });
            });
        }.call(this)).done();
	})

	it('works with conditionals', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                if (true) {
                    return __generatorYield(__generator, async('Meee'), function(e, __t11) {
                        return __t9_cc(__t11);
                    });
                } else {
                    return __t9_cc('You');
                }

                function __t9_cc(__t10_cv) {
                    var x = __t10_cv;
                    x.should.equal('Meee');
                    done();
                    return __generatorStop(__generator);
                }

                return __t9_cc();
            });
        }.call(this));
	})

	it('doesn\'t evaluate false conditional', function(done) {
        var asyncCalled = false;
        function async(x) {
            asyncCalled = true;
            var d = Q.defer();
            setTimeout(function() {
                return d.resolve(x);
            }, 100);
            return d.promise;
        }

        __monad(function() {
            return new __Generator(this, function(__generator) {
                if (false) {
                    return __generatorYield(__generator, async('Meee'), function(e, __t14) {
                        return __t12_cc(__t14);
                    });
                } else {
                    return __t12_cc('You');
                }

                function __t12_cc(__t13_cv) {
                    var x = __t13_cv;
                    x.should.equal('You');
                    asyncCalled.should.equal(false);
                    done();
                    return __generatorStop(__generator);
                }

                return __t12_cc();
            });
        }.call(this));
    })


	it('works with logical expression', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var __t15 = true;

                if (__t15) {
                    return __generatorYield(__generator, async('Meee'), function(e, __t18) {
                        return __t16_cc(__t18);
                    });
                } else {
                    return __t16_cc(__t15);
                }

                function __t16_cc(__t17_cv) {
                    var x = __t17_cv;
                    x.should.equal('Meee');
                    done();
                    return __generatorStop(__generator);
                }

                return __t16_cc();
            });
        }.call(this));
	})

	it('supports short circuit evaluation', function(done) {
        var asyncCalled = false;
        function async(x) {
            asyncCalled = true;
            var d = Q.defer();
            setTimeout(function() {
                return d.resolve(x);
            }, 100);
            return d.promise;
        }

        __monad(function() {
            return new __Generator(this, function(__generator) {
                var __t19 = 'You';

                if (!__t19) {
                    return __generatorYield(__generator, async('Meee'), function(e, __t22) {
                        return __t20_cc(__t22);
                    });
                } else {
                    return __t20_cc(__t19);
                }

                function __t20_cc(__t21_cv) {
                    var x = __t21_cv;
                    x.should.equal('You');
                    asyncCalled.should.equal(false);
                    done();
                    return __generatorStop(__generator);
                }

                return __t20_cc();
            });
        }.call(this));
    })



	it('works with if statement', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var x;

                if (true) {
                    return __generatorYield(__generator, async('Meee'), function(e, __t25) {
                        x = __t25;
                        return __t23_cc_if(null);
                    });
                } else {
                    x = 'You';
                    return __t23_cc_if(null);
                }

                function __t23_cc_if(__t24_cv_if) {
                    x.should.equal('Meee');
                    done();
                    return __generatorStop(__generator);
                }

                return __t23_cc_if();
            });
        }.call(this));
	})

	it('works with if statement condition', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var x;

                return __generatorYield(__generator, async(true), function(e, __t26) {
                    if (__t26) {
                        x = 'Moi';
                        return __t27_cc_if(null);
                    } else {
                        x = 'You';
                        return __t27_cc_if(null);
                    }

                    function __t27_cc_if(__t28_cv_if) {
                        x.should.equal('Moi');
                        done();
                        return __generatorStop(__generator);
                    }

                    return __t27_cc_if();
                });
            });
        }.call(this));
	})

	it('works with while statement', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var x = 0;
                var i = 3;
                return __t29_loop.call(this);

                function __t29_loop() {
                    if (i > 0) {
                        return __generatorYield(__generator, async(i--), function(e, __t34) {
                            x += __t34;
                            return __t29_loop.call(this);
                            return __t32_cc_if(null);
                        });
                    } else {
                        return __t32_cc_if(null);
                    }

                    function __t32_cc_if(__t33_cv_if) {
                        return __t30_cc_loop();
                    }

                    return __t32_cc_if();
                }

                function __t30_cc_loop(__t31_cv_loop) {
                    x.should.equal(6);
                    done();
                    return __generatorStop(__generator);
                }

                return __t30_cc_loop();
            });
        }.call(this));
	})

	it('works with while statement condition', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var x = 0;
                var i = 3;
                return __t35_loop.call(this);

                function __t35_loop() {
                    return __generatorYield(__generator, async(i), function(e, __t38) {
                        if (__t38 > 0) {
                            x += i--;
                            return __t35_loop.call(this);
                            return __t39_cc_if(null);
                        } else {
                            return __t39_cc_if(null);
                        }

                        function __t39_cc_if(__t40_cv_if) {
                            return __t36_cc_loop();
                        }

                        return __t39_cc_if();
                    });
                }

                function __t36_cc_loop(__t37_cv_loop) {
                    x.should.equal(6);
                    done();
                    return __generatorStop(__generator);
                }

                return __t36_cc_loop();
            });
        }.call(this));
	})

	it('works with for statement', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var x = 0;
                var i = 0;
                return __t41_loop.call(this);

                function __t41_loop() {
                    if (i <= 3) {
                        return __generatorYield(__generator, async(i), function(e, __t46) {
                            x += __t46;
                            i++;
                            return __t41_loop.call(this);
                            return __t44_cc_if(null);
                        });
                    } else {
                        return __t44_cc_if(null);
                    }

                    function __t44_cc_if(__t45_cv_if) {
                        return __t42_cc_loop();
                    }

                    return __t44_cc_if();
                }

                function __t42_cc_loop(__t43_cv_loop) {
                    x.should.equal(6);
                    done();
                    return __generatorStop(__generator);
                }

                return __t42_cc_loop();
            });
        }.call(this)).done();
	})

	it('works with for statement expressions', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var x = 0;
                var i = 0;
                return __t47_loop.call(this);

                function __t47_loop() {
                    return __generatorYield(__generator, async(i), function(e, __t50) {
                        if (__t50 <= 3) {
                            x += i;

                            return __generatorYield(__generator, async(1), function(e, __t53) {
                                i += __t53;
                                return __t47_loop.call(this);
                                return __t51_cc_if(null);
                            });
                        } else {
                            return __t51_cc_if(null);
                        }

                        function __t51_cc_if(__t52_cv_if) {
                            return __t48_cc_loop();
                        }

                        return __t51_cc_if();
                    });
                }

                function __t48_cc_loop(__t49_cv_loop) {
                    x.should.equal(6);
                    done();
                    return __generatorStop(__generator);
                }

                return __t48_cc_loop();
            });
        }.call(this)).done();
	})

	it('works with for-in statement', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var x = "";

                var __t54_keys = __convertForIn({
                    a:1,
                    b:1
                });

                var __t55_i = 0;
                return __t56_loop.call(this);

                function __t56_loop() {
                    if (__t55_i < __t54_keys.length) {
                        var i = __t54_keys[__t55_i];

                        return __generatorYield(__generator, async(i), function(e, __t61) {
                            x += __t61;
                            __t55_i = __t55_i + 1;
                            return __t56_loop.call(this);
                            return __t59_cc_if(null);
                        });
                    } else {
                        return __t59_cc_if(null);
                    }

                    function __t59_cc_if(__t60_cv_if) {
                        return __t57_cc_loop();
                    }

                    return __t59_cc_if();
                }

                function __t57_cc_loop(__t58_cv_loop) {
                    x.should.equal('ab');
                    done();
                    return __generatorStop(__generator);
                }

                return __t57_cc_loop();
            });
        }.call(this));
	})

	it('works with for-in statement expression', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var x = "";

                return __generatorYield(__generator, async({
                    a:1,
                    b:1
                }), function(e, __t62) {
                    for ( var i in __t62 ) {
                        x += i;
                    }

                    x.should.equal('ab');
                    done();
                    return __generatorStop(__generator);
                });
            });
        }.call(this));
	})

	it('works with continue statement in for-in', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var x = "";

                var __t63_keys = __convertForIn({
                    a:1,
                    b:1,
                    c:1
                });

                var __t64_i = 0;
                return __t65_loop.call(this);

                function __t65_loop() {
                    if (__t64_i < __t63_keys.length) {
                        var i = __t63_keys[__t64_i];

                        return __generatorYield(__generator, async(i), function(e, __t70) {
                            var v =__t70;
                            console.log(v);

                            if (v == 'b') {
                                __t64_i = __t64_i + 1;
                                return __t65_loop.call(this);
                            }

                            x += v;
                            __t64_i = __t64_i + 1;
                            return __t65_loop.call(this);
                            return __t68_cc_if(null);
                        });
                    } else {
                        return __t68_cc_if(null);
                    }

                    function __t68_cc_if(__t69_cv_if) {
                        return __t66_cc_loop();
                    }

                    return __t68_cc_if();
                }

                function __t66_cc_loop(__t67_cv_loop) {
                    x.should.equal('ac');
                    done();
                    return __generatorStop(__generator);
                }

                return __t66_cc_loop();
            });
        }.call(this));
	})

	it('works with break statement in for-in', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var x = "";

                var __t71_keys = __convertForIn({
                    a:1,
                    b:1,
                    c:1
                });

                var __t72_i = 0;
                var __t74_flag = true;
                return __t73_loop.call(this);

                function __t73_loop() {
                    if (__t74_flag && __t72_i < __t71_keys.length) {
                        var i = __t71_keys[__t72_i];

                        return __generatorYield(__generator, async(i), function(e, __t79) {
                            var v =__t79;

                            if (v == 'c') {
                                __t74_flag = false;
                                __t72_i = __t72_i + 1;
                                return __t73_loop.call(this);
                            }

                            x += v;
                            __t72_i = __t72_i + 1;
                            return __t73_loop.call(this);
                            return __t77_cc_if(null);
                        });
                    } else {
                        return __t77_cc_if(null);
                    }

                    function __t77_cc_if(__t78_cv_if) {
                        return __t75_cc_loop();
                    }

                    return __t77_cc_if();
                }

                function __t75_cc_loop(__t76_cv_loop) {
                    x.should.equal('ab');
                    done();
                    return __generatorStop(__generator);
                }

                return __t75_cc_loop();
            });
        }.call(this));
	})


	it('works with for-of statement', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var r = "";
                var __t0 = __iterator(['a','b','c']);
                return __t80_loop.call(this);

                function __t80_loop() {
                    if (__t0.hasNext()) {
                        var x = __t0.next();

                        return __generatorYield(__generator, async(x), function(e, __t85) {
                            r += __t85;
                            return __t80_loop.call(this);
                            return __t83_cc_if(null);
                        });
                    } else {
                        return __t83_cc_if(null);
                    }

                    function __t83_cc_if(__t84_cv_if) {
                        return __t81_cc_loop();
                    }

                    return __t83_cc_if();
                }

                function __t81_cc_loop(__t82_cv_loop) {
                    r.should.equal('abc');
                    done();
                    return __generatorStop(__generator);
                }

                return __t81_cc_loop();
            });
        }.call(this));
	})

	it('works with for-of statement expression', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var r = "";

                return __generatorYield(__generator, async(['a','b','c']), function(e, __t86) {
                    var __t1 = __iterator(__t86);

                    while (__t1.hasNext()) {
                        var x = __t1.next();
                        r += x;
                    }

                    r.should.equal('abc');
                    done();
                    return __generatorStop(__generator);
                });
            });
        }.call(this));
	})

	it('works with continue statement in for-of', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var r = "";
                var __t2 = __iterator(['a','b','c']);
                return __t87_loop.call(this);

                function __t87_loop() {
                    if (__t2.hasNext()) {
                        var x = __t2.next();

                        return __generatorYield(__generator, async(x), function(e, __t92) {
                            var v =__t92;

                            if (v == 'b') {
                                return __t87_loop.call(this);
                            }

                            r += v;
                            return __t87_loop.call(this);
                            return __t90_cc_if(null);
                        });
                    } else {
                        return __t90_cc_if(null);
                    }

                    function __t90_cc_if(__t91_cv_if) {
                        return __t88_cc_loop();
                    }

                    return __t90_cc_if();
                }

                function __t88_cc_loop(__t89_cv_loop) {
                    r.should.equal('ac');
                    done();
                    return __generatorStop(__generator);
                }

                return __t88_cc_loop();
            });
        }.call(this));
	})

	it('works with break statement in for-of', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var r = "";
                var __t3 = __iterator(['a','b','c']);
                var __t94_flag = true;
                return __t93_loop.call(this);

                function __t93_loop() {
                    if (__t94_flag && __t3.hasNext()) {
                        var x = __t3.next();

                        return __generatorYield(__generator, async(x), function(e, __t99) {
                            var v =__t99;

                            if (v == 'c') {
                                __t94_flag = false;
                                return __t93_loop.call(this);
                            }

                            r += v;
                            return __t93_loop.call(this);
                            return __t97_cc_if(null);
                        });
                    } else {
                        return __t97_cc_if(null);
                    }

                    function __t97_cc_if(__t98_cv_if) {
                        return __t95_cc_loop();
                    }

                    return __t97_cc_if();
                }

                function __t95_cc_loop(__t96_cv_loop) {
                    r.should.equal('ab');
                    done();
                    return __generatorStop(__generator);
                }

                return __t95_cc_loop();
            });
        }.call(this));
	})



	it('preserves lexical this', function(done) {
		((function() {
			__monad(function() {
                return new __Generator(this, function(__generator) {
                    return __generatorYield(__generator, async(this.m), function(e, __t100) {
                        (__t100).should.equal('hello');
                        done();
                        return __generatorStop(__generator);
                    });
                });
            }.call(this));
		})).call({ m: 'hello' })
	})

	it('allows inner functions', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                return __generatorYield(__generator, async(['hello']), function(e, __t101) {
                    (__t101).map(function(x) {
                        return x;
                    }).join('').should.equal('hello');
                    done();
                    return __generatorStop(__generator);
                });
            });
        }.call(this));
	})

	it('allows inner functions as part of bound expression', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var called = false;

                return __generatorYield(__generator, async('hello').then(function(m) {
                    m.should.equal('hello');
                    called = true;
                }), function(e, __t102) {
                    called.should.equal(true);
                    done();
                    return __generatorStop(__generator);
                });
            });
        }.call(this));
	})



	it('supports return statement', function(done) {
		__monad(function() {
            return new __Generator(this, function(__generator) {
                var called = false;

                return __generatorYield(__generator, async('hello'), function(e, __t103) {
                    if (__t103 == 'hello') {
                        return __generatorStop(__generator, 'returned');
                        return __t104_cc_if(null);
                    } else {
                        return __t104_cc_if(null);
                    }

                    function __t104_cc_if(__t105_cv_if) {
                        return __generatorYield(__generator, async('not returned'), function(e, __t106) {
                            return __generatorStop(__generator, false);
                            return __generatorStop(__generator);
                        });
                    }

                    return __t104_cc_if();
                });
            });
        }.call(this)).then( function(v) {
			v.should.equal('returned');
			done()
		} )
	})
});